openapi: "3.0.0"
info:
  version: 1.0.0
  title: Messages API
  description: 'The Messaging API is a new API that consolidates all messaging channels. It encapsulates a user (developer) from having to use multiple APIs to interact with our various channels such as SMS, MMS, Viber, Facebook Messenger, etc. The API normalises information across all channels to abstracted to, from and content. This API is currently in Beta.'
  contact:
    name: Nexmo DevRel
    email: devrel@nexmo.com
    url: 'https://developer.nexmo.com/'  
servers:
  - url: https://api.nexmo.com/v1/messages
paths:
  /:
    post:
      security:
        - bearerAuth: []
        - basicAuth: []
      description: Send a Message
      operationId: NewMessage
      requestBody:
        description: Send a Message.
        required: true
        x-show-example-request: true
        content:
          application/json:
            schema:
              oneOf:
                - title: SMS
                  x-tab-id: SMS
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/Text'
                      - properties:
                          text:
                            description: |
                                The text of message to send; limited to 1000 characters. The Messages API automatically detects unicode characters when sending SMS and sends the message as a unicode SMS. For more information on how concatenation and encoding please visit: [developer.nexmo.com/messaging/sms/guides/concatenation-and-encoding](https://developer.nexmo.com/messaging/sms/guides/concatenation-and-encoding).
                      - $ref: '#/components/schemas/channelOptionsSms'
                - title: MMS
                  x-tab-id: MMS
                  oneOf:                    
                    - allOf:                                           
                      - $ref: '#/components/schemas/Image'
                      - properties:
                          image:
                            required:
                              - url
                            properties:
                              url:
                                type: string
                                description: |
                                  The URL of the image attachment.

                                  Supports `.jpg`, `.jpeg`, `.png` and `.gif`.
                                example: 'https://example.com/image.jpg'
                              caption:
                                type: string
                                description: 'Additional text to accompany the image.'
                                minLength: 1
                                maxLength: 3000
                                example: 'Additional text to accompany the image.'
                      - $ref: '#/components/schemas/channelOptionsMms'
                - title: WhatsApp
                  x-tab-id: WhatsApp
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/Text'
                      - properties:
                          text:
                            description: |
                                The text of message to send; limited to 4096 characters, including unicode.
                      - $ref: '#/components/schemas/channelOptionsWhatsapp'
                    - allOf:
                      - $ref: '#/components/schemas/Image'
                      - properties:
                          image:
                            required:
                              - url
                            properties:
                              url:
                                type: string
                                description: |
                                  The URL of the image attachment.

                                  Supports `.jpg`, `.jpeg`, and `.png`.
                                example: 'https://example.com/image.jpg'
                              caption:
                                type: string
                                description: 'Additional text to accompany the image.'
                                minLength: 1
                                maxLength: 3000
                                example: 'Additional text to accompany the image.'
                      - $ref: '#/components/schemas/channelOptionsWhatsapp'
                    - allOf:
                      - $ref: '#/components/schemas/Audio'
                      - properties:
                          audio:
                            required:
                              - url
                            properties:
                              url:
                                description: |
                                  The URL of the audio attachment.

                                  Supports `.aac`, `.m4a`, `.amr`, `.mp3` and `.opus`.
                      - $ref: '#/components/schemas/channelOptionsWhatsapp'
                    - allOf:
                      - $ref: '#/components/schemas/Video'
                      - properties:
                          video:
                            required:
                              - url
                            properties:
                              url:
                                description: |
                                  The URL of the video attachment.

                                  Supports `.mp4` and `.3gpp`. Note, only `H.264` video codec and `AAC` audio codec is supported.
                              caption:
                                type: string
                                description: Additional text to accompany the file.
                                example: Additional text.
                      - $ref: '#/components/schemas/channelOptionsWhatsapp'
                    - allOf:
                      - $ref: '#/components/schemas/File'
                      - properties:
                          file:
                            required:
                              - url
                            properties:
                              url:
                                description: |
                                  The URL of the file attachment.

                                  Supports supports a wide range of attachments including `.zip`, `.csv` and `.pdf`.
                              caption:
                                type: string
                                description: Additional text to accompany the file.
                                example: Additional text.

                      - $ref: '#/components/schemas/channelOptionsWhatsapp'
                    - allOf:
                      - required:
                        - message_type
                        - whatsapp
                      - $ref: '#/components/schemas/Template'
                      - $ref: '#/components/schemas/channelOptionsWhatsapp'
                      - properties:                          
                          whatsapp:
                            type: object
                            required:
                              - policy
                              - locale
                            properties:
                              policy:
                                type: string
                                example: deterministic
                                enum:
                                  - deterministic
                                description: 'Policy for resolving what language template to use. Please note that WhatsApp deprecated the `fallback` policy in January of 2020, all requests carrying a `fallback` policy will be rejected with a 400 error. As of right now the only valid choice is `deterministic`'
                              locale:
                                type: string
                                example: en-US
                                description: 'The [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) language of the template. Vonage will translate the BCP 47 format to the [WhatsApp equivalent](https://developers.facebook.com/docs/whatsapp/message-templates/creation#translations). For examples `en-GB` will be auto-translate to en_GB.'
                - title: Messenger
                  x-tab-id: Messenger
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/Text'
                      - properties:
                          text:
                            description: |
                              The text of message to send; limited to 640 characters, including unicode.
                      - $ref: '#/components/schemas/channelOptionsMessenger'
                    - allOf:
                      - $ref: '#/components/schemas/Image'
                      - properties:
                          image:
                            properties:
                              url:
                                type: string
                                description: |
                                  The URL of the image attachment.

                                  Supports `.jpg`, `.jpeg`, `.png` and `.gif`.
                                example: 'https://example.com/image.jpg'
                      - $ref: '#/components/schemas/channelOptionsMessenger'
                    - allOf:
                      - $ref: '#/components/schemas/Audio'
                      - properties:
                          audio:
                            properties:
                              url:
                                description: |
                                    The URL of the audio attachment.

                                    Only supports `.mp3` files
                      - $ref: '#/components/schemas/channelOptionsMessenger'
                    - allOf:
                      - $ref: '#/components/schemas/Video'
                      - properties:
                          video:
                            properties:
                              url:
                                description: |
                                  The URL of the video attachment.

                                  Supports `.mp4` files. Note, only `H.264` video codec and `AAC` audio codec is supported.
                      - $ref: '#/components/schemas/channelOptionsMessenger'
                    - allOf:
                      - $ref: '#/components/schemas/File'
                      - properties:
                          file:
                            properties:
                              url:
                                description: |
                                  The URL of the file attachment.

                                  Supports a wide range of attachments including `.zip`, `.csv` and `.pdf`.
                      - $ref: '#/components/schemas/channelOptionsMessenger'
                - title: Viber
                  x-tab-id: Viber
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/Text'
                      - properties:
                          text:
                            description: |
                              The text of message to send; limited to 1000 characters, including unicode.
                      - $ref: '#/components/schemas/channelOptionsViber'
                    - allOf:
                      - $ref: '#/components/schemas/Image'
                      - properties:
                          image:
                            properties:
                              url:
                                type: string
                                description: |
                                  The URL of the image attachment.

                                  Supports `.jpg`, `.jpeg`, and `.png`.
                                example: 'https://example.com/image.jpg'
                      - $ref: '#/components/schemas/channelOptionsViber'
      responses:
        '202':
          description: Accepted.
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - description: SMS
                    x-tab-id: SMS
                    type: object
                    properties:
                      message_uuid:
                        $ref: '#/components/schemas/MessageUuid'
                  - description: MMS
                    x-tab-id: MMS
                    type: object
                    properties:
                      message_uuid:
                        $ref: '#/components/schemas/MessageUuid'
                  - description: WhatsApp
                    x-tab-id: WhatsApp
                    type: object
                    properties:
                      message_uuid:
                        $ref: '#/components/schemas/MessageUuid'
                  - description: Messenger
                    x-tab-id: Messenger
                    type: object
                    properties:
                      message_uuid:
                        $ref: '#/components/schemas/MessageUuid'
                  - description: Viber
                    x-tab-id: Viber
                    type: object
                    properties:
                      message_uuid:
                        $ref: '#/components/schemas/MessageUuid'


        '401':
          description: "Authentication failure"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ErrorUnauthorizedMissingCredentials"
                  - $ref: "#/components/schemas/ErrorUnauthorizedInvalidApplication"
        
        '402':
          description: "Payment Required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPaymentRequired"

        '422':
          description: "Payment Required"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ErrorInvalidJson"
                  - $ref: "#/components/schemas/ErrorChannel"
                  - $ref: "#/components/schemas/ErrorChannelParams"
                  - $ref: "#/components/schemas/ErrorSender"
                  - $ref: "#/components/schemas/ErrorRecipient"
                  - $ref: "#/components/schemas/ErrorMessageType"
                  - $ref: "#/components/schemas/ErrorMessageParams"
                  - $ref: "#/components/schemas/ErrorClientReference"

        '429':
          description: "Authentication failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorThrottled"

        '500':
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternal"

      callbacks:
        message-status:
          '{$request.body#/callback}':
            post:
              summary: Message Status
              operationId: message-status
              x-example-path: '/webhooks/message-status'
              description: 'Webhooks to inform about events happening to the message at communication level (has it been delivered, rejected by the provider...).'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      oneOf:
                        - $ref: '#/components/schemas/messageStatusSMS'
                        - $ref: '#/components/schemas/messageStatusMMS'
                        - $ref: '#/components/schemas/messageStatusWhatsApp'
                        - $ref: '#/components/schemas/messageStatusMessenger'
                        - $ref: '#/components/schemas/messageStatusViber'
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback.

x-webhooks:
  inbound-message:
    '{$request.body#/callback}':
      post:
        summary: Inbound Message
        operationId: inbound-message
        x-example-path: '/webhooks/inbound-message'
        description: An inbound message from a customer to you.
        requestBody:
          required: true
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/inboundMessageSMS'
                  - $ref: '#/components/schemas/messageStatusMMS'
                  - $ref: '#/components/schemas/messageStatusWhatsApp'
                  - $ref: '#/components/schemas/messageStatusMessenger'
                  - $ref: '#/components/schemas/messageStatusViber'
        responses:
            '200':
              description: Your server returns this code if it accepts the callback.


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic

  schemas:
    Image:
      allOf:
        - $ref: "#/components/schemas/baseMessageType"
        - title: Image
          x-tab-id: Image
          type: object
          required:
            - image
          properties:
            message_type:
              type: string
              enum:
                - image
              example: image
              description: The type of message to send. You must provide `image` in this field
            image:
              type: object
              properties:
                url:
                  type: string

    Audio:
      allOf:
        - $ref: "#/components/schemas/baseMessageType"
        - title: Audio
          x-tab-id: Audio
          type: object
          required:
            - audio
          properties:
            message_type:
              type: string
              enum:
                - audio
              example: audio
              description: The type of message to send. You must provide `audio` in this field
            audio:
              type: object
              properties:
                url:
                  type: string
                  minLength: 10
                  maxLength: 2000
                  example: 'https://example.com/audio.mp3'

    Video:
      allOf:
        - $ref: "#/components/schemas/baseMessageType"
        - title: Video
          x-tab-id: Video
          type: object
          required:
            - video
          properties:
            message_type:
              type: string
              enum:
                - video
              example: video
              description: The type of message to send. You must provide `video` in this field
            video:
              type: object
              properties:
                url:
                  type: string
                  example: 'https://example.com/video.mp4'

    File:
      allOf:
        - $ref: "#/components/schemas/baseMessageType"
        - title: File
          x-tab-id: File
          type: object
          required:
            - file
          properties:
            message_type:
              type: string
              enum:
                - file
              example: file
              description: The type of message to send. You must provide `file` in this field
            file:
              type: object
              properties:
                url:
                  type: string
                  example: 'https://example.com/file.pdf'

    Template:
      allOf:
        - $ref: "#/components/schemas/baseMessageType"
        - title: Template
          x-tab-id: Template
          type: object
          required:
            - template
          properties:
            message_type:
              type: string
              enum:
                - template
              example: template
              description: The type of message to send. You must provide `template` in this field
            template:
              required:
                - name
              type: object
              properties:
                name:
                  type: string
                  example: verify
                  description: 'The name of the template. For WhatsApp use your WhatsApp namespace (available via Facebook Business Manager), followed by a colon : and the name of the template to use.'
                parameters:
                  type: array
                  example:
                    - Acme
                    - '12345'
                  description: The parameters are an array of strings. The first value being {{1}} in the template.
                  items:
                    type: string
    Text:
      allOf:
        - $ref: "#/components/schemas/baseMessageType"
        - title: Text
          x-tab-id: Text
          description: The text of message to send.
          required:
            - text
          properties:
            message_type:
              type: string
              enum:
                - text
              example: text
              description: The type of message to send. You must provide `text` in this field
            text:
              type: string
              example: 'Nexmo Verification code: 12345.<br />Valid for 10 minutes.'
    ErrorChannel:
      description: Unsupported channel
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#1100
        title:
          type: string
          description: Generic error message
          example: Unsupported channel
        detail:
          type: string
          description: Additional information about the error
          example: The specified channel is not supported.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    ErrorChannelParams:
      description: Invalid channel parameters
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#1110
        title:
          type: string
          description: Generic error message
          example: Invalid channel parameters
        detail:
          type: string
          description: Additional information about the error
          example: The value of one or more parameters is invalid.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf
        invalid_parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of invalid parameter
                example: messenger.category
              reason:
                type: string
                description: Reason of failure
                example: Must be one of `response`, `update` or `message_tag`.

    ErrorSender:
      description: Invalid sender
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#1120
        title:
          type: string
          description: Generic error message
          example: Invalid sender
        detail:
          type: string
          description: Additional information about the error
          example: The `from` parameter is invalid for the given channel.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    ErrorRecipient:
      description: Invalid recipient
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#110
        title:
          type: string
          description: Generic error message
          example: Invalid recipient
        detail:
          type: string
          description: Additional information about the error
          example: The `to` parameter is invalid for the given channel.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf
    
    ErrorMessageType:
      description: Invalid message type
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#1140
        title:
          type: string
          description: Generic error message
          example: Invalid message type
        detail:
          type: string
          description: Additional information about the error
          example: The `to` parameter is invalid for the given channel.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    ErrorMessageParams:
      description: Invalid message parameters
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#1150
        title:
          type: string
          description: Generic error message
          example: Invalid params
        detail:
          type: string
          description: Additional information about the error
          example: The value of one or more parameters is invalid.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf
        invalid_parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of invalid parameter
                example: image.url
              reason:
                type: string
                description: Reason of failure
                example: is required.

    ErrorClientReference:
      description: Invalid client reference
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#1060
        title:
          type: string
          description: Generic error message
          example: Invalid client reference
        detail:
          type: string
          description: Additional information about the error
          example: The client reference can be a string of up to 40 characters.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    ErrorPaymentRequired:
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/#low-balance
        title:
          type: string
          description: Generic error message
          example: Low balance
        detail:
          type: string
          description: Additional information about the error
          example: This request could not be performed due to your account balance being low.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    ErrorThrottled:
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#1010
        title:
          type: string
          description: Generic error message
          example: Rate Limit Hit
        detail:
          type: string
          description: Additional information about the error
          example: Please wait, then retry your request
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    ErrorInternal:
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/messages#1000
        title:
          type: string
          description: Generic error message
          example: Internal error
        detail:
          type: string
          description: Additional information about the error
          example: There was an error processing your request in the Platform.
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf
    
    ErrorInvalidJson:
      description: Invalid JSON
      type: object
      required:
        - type
        - title
        - detail
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors#invalid-json
        title:
          type: string
          description: Generic error message
          example: The request body did not contain valid JSON
        detail:
          type: string
          description: Additional information about the error
          example: 'Unexpected character (''"'' (code 34)): was expecting comma to separate Object entries'
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    ErrorUnauthorizedInvalidApplication:
      description: Invalid Application Type
      type: object
      required:
        - type
        - title
        - details
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/#unprovisioned
        title:
          type: string
          description: Generic error message
          example: The crendentials provided do not have access to the requested product
        detail:
          type: string
          description: Additional information about the error
          example: Check your API key is correct and has been whitelisted
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    ErrorUnauthorizedMissingCredentials:
      description: Missing or Invalid Credentials
      type: object
      required:
        - type
        - title
        - details
        - instance
      properties:
        type:
          type: string
          description: Link to error / remediation options
          example: https://developer.nexmo.com/api-errors/#unathorized
        title:
          type: string
          description: Generic error message
          example: You did not provide correct credentials.
        detail:
          type: string
          description: Additional information about the error
          example: Check that you're using the correct credentials, and that your account has this feature enabled
        instance:
          type: string
          description: Internal Trace ID
          example: bf0ca0bf927b3b52e3cb03217e1a1ddf

    MessageUuid:
      type: string
      example: aaaaaaaa-bbbb-cccc-dddd-0123456789ab
      description: The UUID of the message
    
    ToNumber:
      type: string
      minLength: 7
      maxLength: 15
      example: '447700900000'
      description: |
           The phone number of the message **recipient** in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000.

    FromNumber:
      type: string      
      example: '447700900001'
      description: |
           The phone number of the message **sender** in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000. For SMS in certain localities alpha-numeric sender id's will work as well, seel [Global Messaging](https://developer.nexmo.com/messaging/sms/guides/country-specific-features#country-specific-features) for more details

    ToId:
      type: string
      minLength: 1
      maxLength: 50
      example: '0123456789'
      description: |
          The ID of the message recipient

    FromId:
      type: string
      minLength: 1
      maxLength: 50
      example: '9876543210'
      description: |
          The ID of the message sender

    baseMessageType:
      type: object
      required:
        - to
        - from
        - message
        - message_type
        - channel
      properties:
        client_ref:
          type: string
          description: Client reference of up to 40 characters. The reference will be present in every message status.
    channelOptionsSms:
      type: object
      properties:
        to:
          $ref: "#/components/schemas/ToNumber"
        from:
          $ref: "#/components/schemas/FromNumber"
        channel:
          type: string
          description: The channel to send to. You must provide `sms` in this field
          example: sms
          enum:
            - sms
    channelOptionsMms:
      type: object
      properties:
        to:
          $ref: "#/components/schemas/ToNumber"
        from:
          $ref: "#/components/schemas/FromNumber"
        channel:
          type: string
          description: The channel to send to. You must provide `mms` in this field
          example: mms
          enum:
            - mms
    channelOptionsMessenger:
      type: object
      properties:
        to:
          $ref: "#/components/schemas/ToId"
        from:
          $ref: "#/components/schemas/FromId"
        channel:
          description: The channel to send to. You must provide `messenger` in this field
          type: string
          example: messenger
          enum:
            - messenger
        messenger:
          type: object
          properties:
            category:
              type: string
              example: response
              description: The use of different category tags enables the business to send messages for different use cases. For Facebook Messenger they need to comply with their [Messaging Types policy](https://developers.facebook.com/docs/messenger-platform/send-messages#messaging_types). Vonage maps our `category` to their `messaging_type`. If `message_tag` is used, then an additional `tag` for that type is mandatory. By default Vonage sends the `response` category to Facebook Messenger.
              enum:
                - response
                - update
                - message_tag
            tag:
              description: A tag describing the type and relevance of the 1:1 communication between your app and the end user. A full list of available tags is available [here](https://developers.facebook.com/docs/messenger-platform/send-messages/message-tags)
              example: CONFIRMED_EVENT_UPDATE
              type: string
    channelOptionsViber:
      type: object
      properties:
        to:
          $ref: "#/components/schemas/ToNumber"
        from:
          $ref: "#/components/schemas/FromId"
        channel:
          description: The channel to send to. You must provide `viber_service` in this field
          type: string
          example: viber_service
          enum:
            - viber_service
        viber_service:
          type: object
          properties:
            category:
              type: string
              description: The use of different category tags enables the business to send messages for different use cases. For Viber Service Messages the first message sent from a business to a user must be personal, informative & a targeted message - not promotional. By default Vonage sends the `transaction` category to Viber Service Messages.
              enum:
                - transaction
                - promotion
            ttl:
              type: integer
            type:
              type: string
    channelOptionsWhatsapp:
      type: object
      properties:
        to:
          $ref: "#/components/schemas/ToNumber"
        from:
          $ref: "#/components/schemas/FromNumber"
        channel:
          description: The channel to send to. You must provide `whatsapp` in this field
          type: string
          example: whatsapp
          enum:
            - whatsapp
    messageStatusBase:
      type: object
      properties:
        message_uuid:
          $ref: "#/components/schemas/MessageUuid"
        to:
          $ref: "#/components/schemas/ToNumber"
        from:
          $ref: "#/components/schemas/FromNumber"
        timestamp:
          type: string
          description: The datetime of when the event occurred, in `ISO 8601` format.
          example: 2020-01-01T14:00:00.000Z
        status:
          type: string
          description: The status of the message.
          example: submitted
          enum:
            - submitted
            - delivered
            - rejected
            - undeliverable
        error:
          type: object
          properties:
            code:
              type: integer
              example: 1300
              description: The error code. See [our errors list](https://developer.nexmo.com/api-errors/messages-olympus) for a list of possible errors
            reason:
              type: string
              example: 'Not part of the provider network'
              description: Text describing the error. See [our errors list](https://developer.nexmo.com/api-errors/messages-olympus) for a list of possible errors
        usage:
          type: object
          properties:
            currency:
              type: string
              example: EUR
              description: The charge currency in ISO 4217 format.
              enum:
                - EUR
            price:
              type: string
              example: '0.0333'
              description: The charge amount as a stringified number.
        client_ref:
          type: string
          description: Client reference of up to 40 characters. The reference will be present in every message status.
      required:
        - message_uuid
        - channel
        - to
        - from
        - timestamp
        - status
    messageStatusSMS:
      allOf:
        - $ref: "#/components/schemas/messageStatusBase"
        - title: SMS
          x-tab-id: status_SMS
          description: SMS
          properties:
            channel:
              type: string
              description: The channel sending to.
              example: sms
              enum:
                - sms
    messageStatusMMS:
      allOf:
        - $ref: "#/components/schemas/messageStatusBase"
        - title: MMS
          x-tab-id: status_MMS
          description: MMS
          properties:
            channel:
              type: string
              description: The channel sending to.
              example: mms
              enum:
                - mms
    messageStatusWhatsApp:
      allOf:
        - $ref: "#/components/schemas/messageStatusBase"
        - title: WhatsApp
          x-tab-id: status_WhatsApp
          description: WhatsApp
          properties:
            channel:
              type: string
              description: The channel sending to.
              example: whatsapp
              enum:
                - whatsapp
            status:
              example: read
              enum:
                - submitted
                - delivered
                - rejected
                - undeliverable
                - read
    messageStatusMessenger:
      allOf:
        - $ref: "#/components/schemas/messageStatusBase"
        - title: Messenger
          x-tab-id: status_Messenger
          description: Messenger
          properties:
            channel:
              type: string
              description: The channel sending to.
              example: messenger
              enum:
                - messenger
            status:
              example: read
              enum:
                - submitted
                - delivered
                - rejected
                - undeliverable
                - read
            to:
              $ref: "#/components/schemas/ToId"
#              description: |
#                The ID of the message recipient. 
#                
#                This value should be the `from.id` value you received in the inbound messenger event.
            from:
              $ref: "#/components/schemas/FromId"
#              description: |
#                Your ID for the platform that you are sending from.
#
#                This value should be the `to.id` value you received in the inbound messenger event.
    messageStatusViber:
      allOf:
        - $ref: "#/components/schemas/messageStatusBase"
        - title: Viber
          x-tab-id: status_Viber
          description: Viber
          properties:
            channel:
              type: string
              description: The channel sending to.
              example: viber_service
              enum:
                - viber_service
            status:
              example: read
              enum:
                - submitted
                - delivered
                - rejected
                - undeliverable
                - read
    

    inboundMessageSMS:
      title: SMS
      type: object
      properties:
        message_uuid:
          type: string
          example: 'aaaaaaaa-bbbb-cccc-dddd-0123456789ab'
          description: The UUID of the message.
      required:
        - message_uuid
        - to
        - from
        - timestamp

x-errors:
  "1000":
    description: Internal error  -  There was an error processing your request in the Platform.
  "1010":
    description: Throttled - You have exceeded the submission capacity allowed on this account. Please wait and retry

  "1100":
    description: Unsupported channel - The channel specified in the request is not supported.
  "1110":
    description: Invalid channel parameters -  The value of one or more parameters is invalid.
  "1120":
    description: Invalid sender -  The `from` parameter is invalid for the given channel.
  "1130":
    description: Invalid recipient -  The `to` parameter is invalid for the given channel.
  "1140":
    description: Invalid message type - The message type specified in the request is not supported for the given channel.
  "1150":
    description: Invalid channel parameters -  The value of one or more parameters is invalid.
  "1160":
    description: Invalid client reference -  The client reference can be a string of up to 40 characters.
  